version: "3.8"

services:
  # === Download Stack ===
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "${QBIT_PORT:-8080}:8080"
    volumes:
      - ${BASE_PATH}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${NORDVPN_USER}
      - OPENVPN_PASSWORD=${NORDVPN_PASS}
      - SERVER_COUNTRIES=${NORDVPN_COUNTRY:-Netherlands}
      - FIREWALL=on
      - DOT=off
    networks:
      - media_net
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBIT_PORT:-8080}
    volumes:
      - ${BASE_PATH}/qbittorrent:/config
      - ${DOWNLOAD_DIR}:/downloads
    restart: unless-stopped
    depends_on:
      - gluetun

  # === Media Management ===
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/prowlarr:/config
    ports:
      - "${PROWLARR_PORT:-9696}:9696"
    networks:
      - media_net
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/sonarr:/config
      - ${MEDIA_SHARE}:/media
      - ${DOWNLOAD_DIR}:/downloads
    ports:
      - "${SONARR_PORT:-8989}:8989"
    networks:
      - media_net
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/radarr:/config
      - ${MEDIA_SHARE}:/media
      - ${DOWNLOAD_DIR}:/downloads
    ports:
      - "${RADARR_PORT:-7878}:7878"
    networks:
      - media_net
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/bazarr:/config
      - ${MEDIA_SHARE:-/mnt/showtime}:/media
    ports:
      - "${BAZARR_PORT:-6767}:6767"
    networks:
      - media_net
    restart: unless-stopped

  # === Media Servers ===
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${BASE_PATH}/plex/config:/config
      - ${MEDIA_SHARE}/tv:/tv
      - ${MEDIA_SHARE}/movies:/movies
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    network_mode: host  # Better for old hardware/transcoding
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/jellyfin/config:/config
      - ${BASE_PATH}/jellyfin/cache:/cache
      - ${MEDIA_SHARE}/movies:/movies
      - ${MEDIA_SHARE}/tv:/tv
    restart: unless-stopped

  # === Optional Services ===
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
    ports:
      - "8191:8191"
    networks:
      - media_net
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/overseerr:/config
    ports:
      - "${OVERSEERR_PORT:-5055}:5055"
    networks:
      - media_net
    restart: unless-stopped

  unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    volumes:
      - ${MEDIA_SHARE:-/mnt/showtime}:/share
    restart: unless-stopped
    user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_KEY}
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_KEY}
    networks:
      - media_net
      
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - homarr_configs:/app/data/configs
      - homarr_icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - ${HOMARR_PORT:-7575}:7575
    environment:
      - TZ=${TZ}
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7575/"]
      interval: 30s
      timeout: 10s
      retries: 3

  recyclarr:
    image: recyclarr/recyclarr:latest
    container_name: recyclarr
    environment:
      - TZ=${TZ}
    volumes:
      - recyclarr_config:/config
    networks:
      - media_net
    restart: unless-stopped
        
  fileflows:
    image: revenz/fileflows:latest
    container_name: fileflows
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - NODE_NAME=${FILEFLOWS_NODE_NAME:-homeserver}
      # QSV-specific environment variables we confirmed working
      - LIBVA_DRIVER_NAME=i965
      - LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
    volumes:
      - ${BASE_PATH}/fileflows/data:/app/Data
      - ${BASE_PATH}/fileflows/logs:/app/Logs
      - ${BASE_PATH}/fileflows/temp:/temp
      - ${MEDIA_SHARE:-/mnt/showtime}/movies:/media/movies:rw
      - ${MEDIA_SHARE:-/mnt/showtime}/tv:/media/tv:rw
      - ${DOWNLOAD_DIR:-/mnt/showtime/downloads}:/media/incoming:rw
      # QSV-specific mounts
      - /dev/dri:/dev/dri
      - /usr/lib/x86_64-linux-gnu/dri:/usr/lib/x86_64-linux-gnu/dri:ro
    ports:
      - "${FILEFLOWS_PORT:-19200}:19200"
    group_add:
      - "video"
      - "render"
    restart: unless-stopped
    networks:
      - media_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19200/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  recyclarr_config:
  unmanic_config:
  unmanic_cache:
  homarr_configs:
  homarr_icons:

networks:
  media_net:
    driver: bridge
